#!/bin/bash

ADJ_VALUE=".1"
BRIGHTNESS_CONFIG="${HOME}/.bctl"
DEFAULT_BRIGHTNESS=".8"

function check_args()
{
  if [ -z "$1" ]; then
    usage
  fi

  if [ "$1" != "up" ] && [ "$1" != "down" ]; then
    if [ $1 -ge 0 ] && [ $1 -le 10 ]; then
      return 0
    fi

    usage
  fi
}

function get_current_brightness()
{
  if [ -f ${BRIGHTNESS_CONFIG} ]; then
    cat ${BRIGHTNESS_CONFIG}
  else
    echo "${DEFAULT_BRIGHTNESS}" > ${BRIGHTNESS_CONFIG}
    echo ${DEFAULT_BRIGHTNESS}
  fi
}

function get_displays()
{
  xrandr -q | grep " connected" | awk '{print $1}'
}

function is_number()
{
  local re='^[0-9]+$'
  if ! [[ $1 =~ ${re} ]] ; then
    return 1
  else
    return 0
  fi
}

function new_brightness()
{
  if [ "$1" == "up" ]; then
    if [ "$2" == "1.0" ]; then
      echo "$2"
      return 0
    fi

    local op="+"
  else
    if [ "$2" == "0" ]; then
      echo "$2"
      return 0
    fi

    local op="-"
  fi

  echo "${2} ${op} ${ADJ_VALUE}" | bc
}

function switch_diaplsy()
{
  xset -display :0.0 dpms force $1
}

function usage()
{
  echo -e "Usage: bctrl [up|down|0-10]"
  echo -e "  + up: brightness up"
  echo -e "  + down: brightness down"
  echo -e "  + 0-10: tune brightness level directly"
  exit 0
}

### Main ###
check_args $@

if is_number $1; then
  new_b=$( echo "scale=1; $1 / 10" | bc )
else
  cur_brightness=$(get_current_brightness)
  new_b=$(new_brightness $1 ${cur_brightness})
fi

displays="$(get_displays)"
for display in ${displays}; do
  xrandr --output ${display} --brightness ${new_b}

  if [ "${new_b}" == "0" ]; then
    switch_diaplsy "off"
  fi
done

echo ${new_b} > ${BRIGHTNESS_CONFIG}
